Ajout d'un unique sur le champ Nickname de la table user :
ALTER TABLE  `user` ADD UNIQUE (
	`Nickname`
)
ainsi que pour les tables videogame, contest, type, editor, studio, nationality ..
ALTER TABLE  `videogame` ADD UNIQUE (
	`Name`
)
ALTER TABLE  `contest` ADD UNIQUE (
	`Name`
)
ALTER TABLE  `type` ADD UNIQUE (
	`Name`
)
ALTER TABLE  `editor` ADD UNIQUE (
	`Name`
)
ALTER TABLE  `studio` ADD UNIQUE (
	`Name`
)
ALTER TABLE  `nationality` ADD UNIQUE (
	`Locale`
)

Verifie que la date de fin est superieur a la date de debut. Declenche une erreur dans le cas contraire
CREATE DEFINER =  `root`@`localhost` TRIGGER `startAfterEnd` BEFORE UPDATE ON `contest`
 FOR EACH ROW IF NEW.Startdate > NEW.Enddate THEN
UPDATE `Error: invalid_id_test` SET x=1;
END IF


Empecher les paris d'etre negatif. En cas d'entrée negative ce sera donc un paris avec une valuer nulle (0)
CREATE DEFINER =  `root`@`localhost` TRIGGER `positiveBet` BEFORE INSERT ON  `bet` 
FOR EACH
ROW IF( NEW.Price <0 ) 
THEN 
SET NEW.Price =0;

END IF ;

Etude de la normalisation :
Table USER 
1NF
Aucun champ ne peut etre decoupé en sous partie, chacun est atomique. (type de base : varchar, float, text, int )
Aucune valeur n'est repetée dans un champ.
Les champs sont constants dans le temps, les dates sont indiqués sous forme de timestamp. Donc une valeur ficée à partir du premier Janvier 1970.
Les valeurs ne sont pas relative au temps. Elles sont calculables. (par exemple on code l'anniversaire et pas l'age)

2NF
Nous avons une clé primaire (idUser) et les autres champs. Ces autres champs dependendes tous un a un de cette clé primaire.

3NF
Nous pouvons avoir un nom qui se repete pour un prenom different ou tout autre champ qui se repetera d'une autre ligne. Nous n'avons donc pas d'autres clé que l'id.


2NF


